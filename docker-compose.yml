version: '3'
services:
  db:
    image: mariadb:latest
    container_name: whispering-mariadb
    profiles:
      - general
      - simplification
    networks:
      whispering:
        ipv4_address: 172.28.0.2
    ports:
      - "${MYSQL_PORT}:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    restart: always
    volumes:
      # - ${DATA_DIR}/mysql_data:/var/lib/mysql
      - ${MYSQL_CONFIG}:/etc/mysql/my.cnf
      - ./dockerconf/mysql/sql:/docker-entrypoint-initdb.d
      # - ./mysql_log/error.log:/var/log/mysql/error.log
    deploy:
      resources:
        limits:
          memory: 400M

  redis:
    image: redis:${REDIS_VERSION}
    container_name: whispering-redis
    profiles:
      - general
      - simplification
    networks:
      whispering:
        ipv4_address: 172.28.0.3
    ports:
      - "${REDIS_PORT}:6379"
    restart: always
    volumes:
      # - ${DATA_DIR}/redis_data/redis:/data
      - ${REDIS_CONFIG}:/etc/redis.conf
      - ./dockerconf/redis/redis_init.lua:/data/redis_init.lua
    command:
      - /bin/sh
      - -c
      - |
        nohup redis-server /etc/redis.conf &
        sleep 5
        echo "adding default key value"
        redis-cli --eval ./redis_init.lua -a ${REDIS_PASSWORD}
        # this will keep container running
        tail -f /dev/null
    deploy:
      resources:
        limits:
          memory: 200M

  server:
    image: blawhi2435/whispering-corner:${APPLICATION_VERSION}
    container_name: whispering-server
    profiles:
      - general
      - simplification
    networks:
      whispering:
        ipv4_address: 172.28.0.4
    stdin_open: true
    tty: true
    restart: always
    volumes:
      - ${IMAGE_PATH}:/static/images
      - ./log/:/app/log/
      - ./serviceConfig.json:/app/serviceConfig.json
      # - ./cert/server.key:/app/server.key
      # - ./cert/server.pem-chain:/app/server.pem-chain
    ports:
      - "${APPLICATION_PORT}:6969"
    command: ./wait-for-it.sh db:3306 -- ./main --config serviceConfig.json
    depends_on:
      - redis
      - db
    deploy:
      resources:
        limits:
          cpus: '0.70'
          memory: 500M

  swagger:
    image: quay.io/goswagger/swagger
    container_name: whispering-swagger
    profiles:
      - general
      - simplification
    networks:
      whispering:
        ipv4_address: 172.28.0.5
    restart: always
    volumes:
      - ./swagger.yaml:/swagger.yaml
    ports:
      - "${SWAGGER_PORT}:3030"
    command: serve -F=swagger -p 3030 --no-open /swagger.yaml
    depends_on:
      - server

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:${ELASTIC_SEARCH_VERSION}
    container_name: whispering-elastic
    profiles:
      - general
    environment:
      - xpack.security.enabled=false
      - "discovery.type=single-node"
      - "TZ=Asia/Taipei"
    networks:
      whispering:
        ipv4_address: 172.28.0.6
    volumes:
      - ${ELASTIC_PLUGINS}:/usr/share/elasticsearch/plugins
      # - ${DATA_DIR}/elastic_data:/usr/share/elasticsearch/data
    ports:
      - "${ELASTIC_SEARCH_PORT}:9200"
    deploy:
      resources:
        limits:
          cpus: '0.70'
          memory: 800M

  kibana:
    image: docker.elastic.co/kibana/kibana:${ELASTIC_SEARCH_VERSION}
    container_name: whispering-kibana
    profiles:
      - general
    environment:
      - ELASTICSEARCH_HOSTS=http://whispering-elastic:9200
    networks:
      whispering:
        ipv4_address: 172.28.0.8
    depends_on:
      - elasticsearch
    ports:
      - "${KIBANA_PORT}:5601"

  proxy:
    image: nginx:latest
    container_name: whispering-proxy
    profiles:
      - general
      - simplification
    ports:
      - "${NGINX_PORT}:80"
    volumes:
      - ${NGINX_CONFIG}:/etc/nginx/conf.d/default.conf
      - ${DIC_PATH}:/etc/nginx/elasticsearch
    networks:
      whispering:
        ipv4_address: 172.28.0.9
    logging:
      driver: none
    deploy:
      resources:
        limits:
          cpus: '0.70'
          memory: 100M

networks:
  whispering:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.28.0.0/16
          gateway: 172.28.0.1