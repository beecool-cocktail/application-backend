basePath: /api
definitions:
  CocktailIngredientWithID:
    properties:
      amount:
        format: float
        type: number
        x-go-name: Amount
      id:
        format: int64
        type: integer
        x-go-name: ID
      name:
        type: string
        x-go-name: Name
      unit:
        type: string
        x-go-name: Unit
    type: object
    x-go-package: github.com/beecool-cocktail/application-backend/viewmodels
  CocktailIngredientWithoutID:
    properties:
      amount:
        example: 1
        format: float
        type: number
        x-go-name: Amount
      name:
        example: Gin Tonic
        type: string
        x-go-name: Name
      unit:
        example: cup
        type: string
        x-go-name: Unit
    type: object
    x-go-package: github.com/beecool-cocktail/application-backend/viewmodels
  CocktailPhotoWithID:
    properties:
      id:
        format: int64
        type: integer
        x-go-name: ID
      path:
        type: string
        x-go-name: Photo
    type: object
    x-go-package: github.com/beecool-cocktail/application-backend/viewmodels
  CocktailStepWithID:
    properties:
      description:
        type: string
        x-go-name: Description
      id:
        format: int64
        type: integer
        x-go-name: ID
    type: object
    x-go-package: github.com/beecool-cocktail/application-backend/viewmodels
  CocktailStepWithoutID:
    properties:
      description:
        example: shake
        type: string
        x-go-name: Description
    type: object
    x-go-package: github.com/beecool-cocktail/application-backend/viewmodels
  DraftCocktailList:
    properties:
      cocktail_id:
        format: int64
        type: integer
        x-go-name: CocktailID
      created_date:
        type: string
        x-go-name: CreatedDate
      photo:
        type: string
        x-go-name: Photo
      title:
        type: string
        x-go-name: Title
    type: object
    x-go-package: github.com/beecool-cocktail/application-backend/viewmodels
  GetCocktailByIDRequest:
    properties:
      id:
        description: |-
          ID of an cocktail item

          In: path
        format: int64
        type: integer
        x-go-name: ID
    type: object
    x-go-package: github.com/beecool-cocktail/application-backend/viewmodels
  GetCocktailByIDResponse:
    properties:
      cocktail_id:
        format: int64
        type: integer
        x-go-name: CocktailID
      created_date:
        type: string
        x-go-name: CreatedDate
      description:
        type: string
        x-go-name: Description
      ingredient_list:
        items:
          $ref: '#/definitions/CocktailIngredientWithID'
        type: array
        x-go-name: IngredientList
      photos:
        items:
          $ref: '#/definitions/CocktailPhotoWithID'
        type: array
        x-go-name: Photos
      step_list:
        items:
          $ref: '#/definitions/CocktailStepWithID'
        type: array
        x-go-name: StepList
      title:
        type: string
        x-go-name: Title
      user_id:
        format: int64
        type: integer
        x-go-name: UserID
      user_name:
        type: string
        x-go-name: UserName
    type: object
    x-go-package: github.com/beecool-cocktail/application-backend/viewmodels
  GetCocktailDraftByIDRequest:
    properties:
      id:
        description: |-
          ID of an cocktail item

          In: path
        format: int64
        type: integer
        x-go-name: ID
    type: object
    x-go-package: github.com/beecool-cocktail/application-backend/viewmodels
  GetCocktailDraftByIDResponse:
    properties:
      cocktail_id:
        format: int64
        type: integer
        x-go-name: CocktailID
      created_date:
        type: string
        x-go-name: CreatedDate
      description:
        type: string
        x-go-name: Description
      ingredient_list:
        items:
          $ref: '#/definitions/CocktailIngredientWithID'
        type: array
        x-go-name: IngredientList
      photos:
        items:
          $ref: '#/definitions/CocktailPhotoWithID'
        type: array
        x-go-name: Photos
      step_list:
        items:
          $ref: '#/definitions/CocktailStepWithID'
        type: array
        x-go-name: StepList
      title:
        type: string
        x-go-name: Title
    type: object
    x-go-package: github.com/beecool-cocktail/application-backend/viewmodels
  GetDraftCocktailListRequest:
    properties:
      page:
        example: 1
        format: int64
        type: integer
        x-go-name: Page
      page_size:
        example: 10
        format: int64
        type: integer
        x-go-name: PageSize
    required:
    - page
    - page_size
    type: object
    x-go-package: github.com/beecool-cocktail/application-backend/viewmodels
  GetDraftCocktailListResponse:
    properties:
      draft_cocktail_list:
        items:
          $ref: '#/definitions/DraftCocktailList'
        type: array
        x-go-name: DraftCocktailList
      total:
        format: int64
        type: integer
        x-go-name: Total
    type: object
    x-go-package: github.com/beecool-cocktail/application-backend/viewmodels
  GetPopularCocktailListRequest:
    properties:
      page:
        example: 1
        format: int64
        type: integer
        x-go-name: Page
      page_size:
        example: 10
        format: int64
        type: integer
        x-go-name: PageSize
    required:
    - page
    - page_size
    type: object
    x-go-package: github.com/beecool-cocktail/application-backend/viewmodels
  GetPopularCocktailListResponse:
    properties:
      popular_cocktail_list:
        items:
          $ref: '#/definitions/PopularCocktailList'
        type: array
        x-go-name: PopularCocktailList
      total:
        format: int64
        type: integer
        x-go-name: Total
    type: object
    x-go-package: github.com/beecool-cocktail/application-backend/viewmodels
  GetUserInfoResponse:
    properties:
      email:
        type: string
        x-go-name: Email
      is_collection_public:
        description: 是否公開收藏 false=不公開, true=公開
        type: boolean
        x-go-name: IsCollectionPublic
      number_of_collection:
        format: int64
        type: integer
        x-go-name: NumberOfCollection
      number_of_post:
        format: int64
        type: integer
        x-go-name: NumberOfPost
      photo:
        type: string
        x-go-name: Photo
      user_id:
        format: int64
        type: integer
        x-go-name: UserID
      user_name:
        type: string
        x-go-name: Name
    type: object
    x-go-package: github.com/beecool-cocktail/application-backend/viewmodels
  GoogleAuthenticateRequest:
    properties:
      code:
        type: string
        x-go-name: Code
    type: object
    x-go-package: github.com/beecool-cocktail/application-backend/viewmodels
  GoogleAuthenticateResponse:
    properties:
      token:
        type: string
        x-go-name: Token
    type: object
    x-go-package: github.com/beecool-cocktail/application-backend/viewmodels
  LogoutRequest:
    properties:
      user_id:
        format: int64
        type: integer
        x-go-name: UserID
    type: object
    x-go-package: github.com/beecool-cocktail/application-backend/viewmodels
  PopularCocktailList:
    properties:
      cocktail_id:
        format: int64
        type: integer
        x-go-name: CocktailID
      created_date:
        type: string
        x-go-name: CreatedDate
      ingredient_list:
        items:
          $ref: '#/definitions/CocktailIngredientWithoutID'
        type: array
        x-go-name: IngredientList
      photos:
        items:
          type: string
        type: array
        x-go-name: Photos
      title:
        type: string
        x-go-name: Title
      user_id:
        format: int64
        type: integer
        x-go-name: UserID
      user_name:
        type: string
        x-go-name: UserName
    type: object
    x-go-package: github.com/beecool-cocktail/application-backend/viewmodels
  PostArticleRequest:
    properties:
      description:
        example: Very good to drink
        type: string
        x-go-name: Description
      files:
        items:
          type: string
        type: array
        x-go-name: Files
      ingredient_list:
        items:
          $ref: '#/definitions/CocktailIngredientWithoutID'
        type: array
        x-go-name: IngredientList
      name:
        example: Gin Tonic
        type: string
        x-go-name: Name
      step_list:
        items:
          $ref: '#/definitions/CocktailStepWithoutID'
        type: array
        x-go-name: StepList
    required:
    - name
    type: object
    x-go-package: github.com/beecool-cocktail/application-backend/viewmodels
  PostDraftArticleRequest:
    properties:
      description:
        example: Very good to drink
        type: string
        x-go-name: Description
      files:
        items:
          type: string
        type: array
        x-go-name: Files
      ingredient_list:
        items:
          $ref: '#/definitions/CocktailIngredientWithoutID'
        type: array
        x-go-name: IngredientList
      name:
        example: Gin Tonic
        type: string
        x-go-name: Name
      step_list:
        items:
          $ref: '#/definitions/CocktailStepWithoutID'
        type: array
        x-go-name: StepList
    type: object
    x-go-package: github.com/beecool-cocktail/application-backend/viewmodels
  ResponseData:
    properties:
      data:
        type: object
        x-go-name: Data
      error_code:
        type: string
        x-go-name: ErrorCode
      error_message:
        type: string
        x-go-name: ErrorMessage
    type: object
    x-go-package: github.com/beecool-cocktail/application-backend/viewmodels
  UpdateUserInfoRequest:
    properties:
      file:
        type: string
        x-go-name: File
      is_collection_public:
        description: public user collection post
        example: false
        type: boolean
        x-go-name: IsCollectionPublic
      name:
        description: name for this user
        example: Feen Lin
        type: string
        x-go-name: Name
    required:
    - name
    - is_collection_public
    type: object
    x-go-package: github.com/beecool-cocktail/application-backend/viewmodels
  UpdateUserInfoResponse:
    properties:
      photo:
        type: string
        x-go-name: Photo
    type: object
    x-go-package: github.com/beecool-cocktail/application-backend/viewmodels
host: localhost:6969
info:
  description: This is api server
  title: api server
  version: "0.1"
paths:
  /cocktail-drafts:
    get:
      description: Get draft cocktail list order by create date.
      operationId: noRequest
      responses:
        "200":
          $ref: '#/responses/getDraftCocktailListResponse'
      security:
      - Bearer:
        - apiKey
      summary: Get draft cocktail list
      tags:
      - cocktail
    post:
      description: Post cocktail draft article.
      operationId: postDraftArticleRequest
      parameters:
      - in: body
        name: Body
        schema:
          $ref: '#/definitions/PostDraftArticleRequest'
      responses: {}
      security:
      - Bearer:
        - apiKey
      summary: Post cocktail draft article.
      tags:
      - cocktail
  /cocktail-drafts/{id}:
    get:
      description: Get cocktail draft photo, steps and ingredient.
      operationId: getCocktailDraftByIDRequest
      parameters:
      - example: 123456
        in: path
        name: id
        required: true
        schema:
          $ref: '#/definitions/GetCocktailDraftByIDRequest'
        type: integer
      responses:
        "200":
          $ref: '#/responses/getCocktailDraftByIDResponse'
      security:
      - Bearer:
        - apiKey
      summary: Get cocktail draft detail information
      tags:
      - cocktail
  /cocktails:
    get:
      description: Get popular cocktail list order by create date.
      operationId: noRequest
      parameters:
      - example: 1
        in: query
        name: page
        required: true
        type: integer
      - example: 10
        in: query
        name: page_size
        required: true
        type: integer
      responses:
        "200":
          $ref: '#/responses/popularCocktailListResponse'
      summary: Get popular cocktail list
      tags:
      - cocktail
    post:
      description: Post cocktail article.
      operationId: postArticleRequest
      parameters:
      - in: body
        name: Body
        schema:
          $ref: '#/definitions/PostArticleRequest'
      responses: {}
      security:
      - Bearer:
        - apiKey
      summary: Post cocktail article.
      tags:
      - cocktail
  /cocktails/{id}:
    get:
      description: Get cocktail photo, steps and ingredient.
      operationId: getCocktailByIDRequest
      parameters:
      - example: 123456
        in: path
        name: id
        required: true
        schema:
          $ref: '#/definitions/GetCocktailByIDRequest'
        type: integer
      responses:
        "200":
          $ref: '#/responses/getCocktailByIDResponse'
      summary: Get cocktail detail information
      tags:
      - cocktail
  /google-authenticate:
    post:
      description: Use Code to exchange access token.
      operationId: googleAuthenticateRequest
      parameters:
      - in: body
        name: Body
        schema:
          $ref: '#/definitions/GoogleAuthenticateRequest'
      responses:
        "201":
          $ref: '#/responses/googleAuthenticateResponse'
      summary: Get access token.
      tags:
      - login
  /google-login:
    get:
      description: Will redirect with authorization code.
      operationId: googleLogin
      responses:
        "307":
          description: ' redirect'
      summary: Login with google OAuth2
      tags:
      - login
  /user/edit-info:
    post:
      description: Edit user name and collection of publicity status.
      operationId: updateUserInfoRequest
      parameters:
      - in: body
        name: Body
        schema:
          $ref: '#/definitions/UpdateUserInfoRequest'
      responses:
        "200":
          $ref: '#/responses/updateUserPhotoResponse'
      security:
      - Bearer:
        - apiKey
      summary: Edit user information.
      tags:
      - user
  /user/info:
    get:
      description: Get user id, name, email, numberOfPost, numberOfCollection and
        photo.
      operationId: info
      responses:
        "200":
          $ref: '#/responses/getUserInfoResponse'
      security:
      - Bearer:
        - apiKey
      summary: Get user information.
      tags:
      - user
  /user/logout:
    post:
      description: make token invalid.
      operationId: logoutRequest
      parameters:
      - in: body
        name: Body
        schema:
          $ref: '#/definitions/LogoutRequest'
      responses: {}
      summary: User logout.
      tags:
      - user
responses:
  getCocktailByIDResponse:
    description: ""
    schema:
      $ref: '#/definitions/GetCocktailByIDResponse'
  getCocktailDraftByIDResponse:
    description: ""
    schema:
      $ref: '#/definitions/GetCocktailDraftByIDResponse'
  getDraftCocktailListResponse:
    description: ""
    schema:
      $ref: '#/definitions/GetDraftCocktailListResponse'
  getUserInfoResponse:
    description: ""
    schema:
      $ref: '#/definitions/GetUserInfoResponse'
  googleAuthenticateResponse:
    description: ""
    schema:
      $ref: '#/definitions/GoogleAuthenticateResponse'
  popularCocktailListResponse:
    description: ""
    schema:
      $ref: '#/definitions/GetPopularCocktailListResponse'
  updateUserPhotoResponse:
    description: ""
    schema:
      $ref: '#/definitions/UpdateUserInfoResponse'
schemes:
- http
- https
securityDefinitions:
  Bearer:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
